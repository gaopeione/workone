node是什么及优缺点
node是一个基于谷歌(Chrome)v8引擎的一个服务环境，(nodejs是运行在服务器端的语言)
优点：1.因为node.js语法和js非常的相似，所以对于前段来说学习成本非常低；
	  2.node适合做需要高并发，频繁数据交互的场景，比如聊天软件，视频直播
缺点： 1.nodejs是单线程，需要异步负责容易阻塞
	  2.nodejs不适合做cpu密集型，复杂计算型，列如必须游戏

2.查看nodejs版本号的方法
node -v

3.Commonjs规范是什么及特点
Commonjs的出现是源于就是本身相互独立，并不能相互引入和关联，所以创造了Commonjs规范来实现js文件之间的联系。
在Commonjs规范中，一个js文件就是一个模块，模块与模块之间可以通过module对象来实现模块与模块之间的联系。
特点：
	1.所有代码都运行在模块作用域，不会污染全局作用域。
	2.模块可以多次加载，但是只会在第一次加载时运行一次，然后运行结果就被缓存了，以后再加载，就直接读取缓存结果。要想让模块再次运行，必须清除缓存。
	3.模块加载的顺序，按照其在代码中出现的顺序

4.fs文件管理模块
fs是nodejs中的文件管理模块，是nodejs的核心模块。可以之间通过require引入进来。列如：var fs=require("fs")
读取文件的异步方法：98%使用这个
		fs.readFile("平级的文件的名字及后缀",function(error,data){//error是错误信息，data指的是数据
		if(error){
				return console.log(error);
			}else{
				console.log(data.toString());//把数据通过res的end方法输出
			}
		})
读取文件的同步方法：
	var data=fs.readFileSync("平级的文件名字及后缀")；//用不得方法
	res.end(data);
	
异步和同步的关系：
		同步：按照代码的书写顺序从上到下，从左到右依次执行，如果有一行出错，整个文件都会报错
		异步：不关注代码的书写顺序，每个代码块各自执行自己的。如果有一段代码报错，不影响其他代码的运行
		区别与联系：
				1.一个需求的实现通常都可以用同步和异步来实现
				2.同步容易造成阻塞，异步可以避免阻塞
				3.异步可以避免无效等待(列如：读文件；ajax)，性能上更好
				
5.node 的HTTP模块
http是做网络通信的模块：计算机与计算机之间的交流
node的http模块属于node的内置核心模块，可以直接通过requirere引入进来。列如：var http=require("http")
请求的流程：  1.客户端通过ajax向服务器发起请求
			2.服务器通过端口监听请求
			3.服务器对收到的请求做处理和信息反馈
			
创建一个服务的方法：
		//1.引入http的模块
		var http=require("http");
		//使用http模块下的createSercer创建服务，在这个方法里面传一个函数，函数里有2个形参，分别是请求和相应
		var server=http.createServer(function(req,res){
			//设置响应头，防止浏览器解析和乱码
			res.writeHead(200,{"Content-Type":"Text/plain;charset=utf-8"});
			//设置相应内容,end方法必须且只能写一次
			res.end("hello");
		})
		//监听端口，使用listen方法监听端口，listen方法里面是端口号
		server.listen(8080)
		
在http模块中，响应给浏览器的方式有2种，分别是end和write
区别在于：end方法必须且只能使用一次。
		 writer方法必须写在end方法前面但是可以写任意次。




写出五个响应状态码并说明其表示的意义
200——交易成功
404——没有发现文件、查询或URl
403——请求不允许
500——服务器产生内部错误
401——请求授权失败



3，写出npm与cnpm有什么关系？

npm是nodejs的包管理工具
因为npm安装插件是从国外服务器下载，受网络影响大，可能出现异常。所以淘宝团队把npm的镜像版放在了国内服务器上，这就是cnpm。它的同步频率目约为10分钟一次。

4，地址字符串转化成对象的方法 ， 对象转化成地址字符串的方法？
JSON.stringify()
5，查询字符串转化成对象的方法， 对象转化成查询字符串的方法
JSON.parse()
